type: edu
custom_name: Sold!
files:
- name: src/cinema/Cinema.kt
  visible: true
  text: "package cinema\n\nfun main() {\n\n    val rows = readln().toInt()\n    val\
    \ seats = readln().toInt()\n    var index = 1\n    var index1 = 0\n    var index2\
    \ = 0\n    val seatsList = mutableListOf<String>()\n    val rowsList = mutableListOf<String>()\n\
    \n    // Creating seat list based on user input\n    repeat(seats) {\n       \
    \ if (index < seats) {\n            seatsList.add(index.toString() + \" \")\n\
    \        } else {\n            seatsList.add(index.toString())\n        }\n\n\
    \        index++\n\n    }\n    index = 0\n    println(\"Cinema:\")\n    // Printing\
    \ of seats\n    print(\"  \")\n    repeat(seatsList.lastIndex +1 ) {\n\n     \
    \   print(seatsList[index])\n        index++\n    }\n    println()\n    index\
    \ = 1\n/*\n    repeat(rows) {\n        rowsList.add(index.toString())\n      \
    \  print(rowsList.last() + \" \")\n        repeat(rows +1 ) {\n            rowsList.add(\"\
    S\")\n            print(rowsList.last() + \" \")\n        }\n        println()\n\
    \        rowsList.clear()\n        index++\n    }\n    */\n    do {\n        rowsList.add(index.toString())\n\
    \        print(rowsList.last() /*+ \" \"*/)\n        repeat(rows +1 ) {\n    \
    \        rowsList.add((\" S\"))\n            /*if (index1 < rows) {\n        \
    \        print(rowsList.last() + \" \")\n            } else {\n              \
    \  print(rowsList.last())\n            }*/\n            print(rowsList.last())\n\
    \            index1++\n\n\n        }\n\n        if (index2 < rows -1) {\n    \
    \        println()\n        }\n\n        rowsList.clear()\n        index++\n \
    \       index1 = 0\n        index2++\n    } while (index2 != rows)\n\n    \n}"
  learner_created: false
- name: test/CinemaTests.java
  visible: false
  text: |
    import org.hyperskill.hstest.dynamic.input.DynamicTestingMethod;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testing.TestedProgram;

    public class CinemaTests extends StageTest<String> {

        @DynamicTestingMethod
        CheckResult test1_testOutput() {

            TestedProgram program = new TestedProgram();
            String output = program.start();

            if (!output.toLowerCase().contains("enter the number of rows")) {
                return CheckResult.wrong("At the beginning your program should ask for entering the number of rows.\n" +
                    "Your output should contain 'Enter the number of rows:'");
            }

            output = program.execute("4");

            if (!output.toLowerCase().contains("enter the number of seats in each row")) {
                return CheckResult.wrong("After entering the number of rows your program should ask for entering" +
                    " the number of seats in each row.\n" +
                    "Your output should contain 'Enter the number of seats in each row'");
            }

            output = program.execute("5");

            if (!output.toLowerCase().contains("total income:")) {
                return CheckResult.wrong("After entering the number of seats in each row your program should print total income.\n" +
                    "Your output should contain 'Total income:'");
            }

            if (!output.contains("$200")) {
                return CheckResult.wrong("You miscalculated the income.\nCorrect one is $200");
            }

            return CheckResult.correct();
        }

        @DynamicTestingMethod
        CheckResult test2_testIncomeCalculating() {

            TestedProgram program = new TestedProgram();
            program.start();

            String output = program.execute("8\n9");

            if (!output.contains("$648")) {
                return CheckResult.wrong("You miscalculated the income.\nCorrect one is $648");
            }

            program.stop();

            program = new TestedProgram();
            program.start();

            output = program.execute("9\n7");

            if (!output.contains("$560")) {
                return CheckResult.wrong("You miscalculated the income.\nCorrect one is $560");
            }

            program.stop();

            program = new TestedProgram();
            program.start();

            output = program.execute("7\n9");

            if (!output.contains("$558")) {
                return CheckResult.wrong("You miscalculated the income.\nCorrect one is $558");
            }

            program.stop();

            program = new TestedProgram();
            program.start();

            output = program.execute("1\n1");

            if (!output.contains("$10")) {
                return CheckResult.wrong("You miscalculated the income.\nCorrect one is $10");
            }

            program.stop();

            program = new TestedProgram();
            program.start();

            output = program.execute("3\n3");

            if (!output.contains("$90")) {
                return CheckResult.wrong("You miscalculated the income.\nCorrect one is $90");
            }

            program.stop();

            program = new TestedProgram();
            program.start();

            output = program.execute("8\n8");

            if (!output.contains("$576")) {
                return CheckResult.wrong("You miscalculated the income.\nCorrect one is $576");
            }

            return CheckResult.correct();
        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/learn/step/11365#comment
status: Solved
feedback:
  message: Congratulations!
  time: "Wed, 11 Jan 2023 23:12:53 UTC"
record: 2
